#!/usr/bin/perl
use lib './lib';
use IntelliHome::IntelliHomeNodeMaster;
use Cwd;
use Getopt::Long;
use Module::Load;
use Carp::Always;

my $IHOutput = new IntelliHome::Interfaces::Terminal;
my $Config
    = new IntelliHome::Config( Dirs => ['./config'] )
    ;               #specify where yaml file are
$Config->read();    # Read and load yaml configuration

my $remote
    = IntelliHome::Workers::Master::RemoteSynth->new( Config => $Config );

###################################################### PLUGIN INSTALL, REMOVE, UPDATE
my ($install_plugin, $remove_plugin, $update_plugin);
GetOptions(
    "i|installplugin=s" => \$install_plugin,
    "r|removeplugin=s"  => \$remove_plugin,
    "u|updateplugin=s"  => \$update_plugin
) or die("Error in command line arguments\n");

if ($install_plugin) {
    $IHOutput->info("IntelliHome : installing plugin $install_plugin");
    exit $remote->Parser->run_plugin( $install_plugin, "install" );

}
elsif ($remove_plugin) {
    $IHOutput->info("IntelliHome : removing plugin $remove_plugin");
    exit $remote->Parser->run_plugin( $remove_plugin, "remove" );

}
elsif ($update_plugin) {
    $IHOutput->info("IntelliHome : updating plugin $update_plugin");
    exit $remote->Parser->run_plugin( $update_plugin, "update" );
}
######################################################

$IHOutput->info("IntelliHome : Node master started");
$IHOutput->info(
    "Bringing up sockets (not secured, i assume you have properly secured your network)"
);

my $node
    = "IntelliHome::Schema::"
    . $Config->DBConfiguration->{'database_backend'}
   # . "YAML" #XXX: we force to yaml for now, but the backend will be switchable when autoconfiguration would be ready
    . "::Node";
load $node;

my $me = $node->new( Config => $Config )->selectFromType("master")
    ; # this for now forces the network to have one master, we can easily rid about that in the future
my $Connector = new IntelliHome::Connector( Config => $Config, Node => $me )
    ; #Config parameter is optional, only needed if you wanna send broadcast messages
$Connector->Worker($remote);
$Connector->blocking(1);
$Connector->listen();

#blocking so down can't be executed (was used just for test)
# my $NodeToDeploy
#     = IntelliHome::Node->new( Config => $Config )->selectFromDescription("ih0");
# $NodeToDeploy->deploy();

#$Connector->broadcastMessage("node","test");
